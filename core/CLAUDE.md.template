# Project Memory

## Modern CLI Tools

ALWAYS use modern CLI tools instead of traditional Unix commands:
- **Search**: Use `rg` instead of `grep`
- **Find files**: Use `fd` instead of `find`
- **View files**: Use `bat` instead of `cat`
- **List directory**: Use `eza` instead of `ls`
- **Disk usage**: Use `dust` instead of `du`

For complete tool usage guide: @steering.md

## Build & Development Commands

<!-- Language-specific commands will be added here -->
- Build: [TO_BE_CONFIGURED]
- Test: [TO_BE_CONFIGURED]
- Lint: [TO_BE_CONFIGURED]

## Code Style Guidelines

<!-- Project-specific style guidelines -->
- Follow language conventions
- Use consistent naming
- Keep functions small and focused
- Write self-documenting code

## Project Architecture

<!-- Describe your project structure -->
- Main source: src/
- Tests: tests/ or __tests__/
- Configuration: config/

## SDD Workflow

This project uses Spec-Driven Development (SDD) workflow:
- Use `/kiro:*` commands for structured development
- Follow Requirements → Design → Tasks → Implementation
- Keep diffs small (< 200 lines per change)
- Always write tests for new features

## Development Workflow

1. Start with SDD: `/kiro:spec-init "feature name"`
2. Let code be reviewed by code-reviewer agent
3. Run tests before committing
4. Keep commits atomic and well-described

## Important Notes

<!-- Add project-specific important information -->
- [Add your project-specific guidelines here]
